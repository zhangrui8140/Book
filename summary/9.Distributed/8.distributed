分布式
-----------------------------------------------------
分布式锁
zookeeper 
利用zookeeper作为中间节点 存放锁信息  --监听通知机制

redis


-----------------------------------------------------
分布式事务

XA 方案
所谓的 XA 方案，即：两阶段提交，有一个事务管理器的概念，负责协调多个数据库（资源管理器）的事务，事务管理器先问问各个数据库你准备好了吗？如果每个数据库都回复 ok，那么就正式提交事务，在各个数据库上执行操作；如果任何其中一个数据库回答不 ok，那么就回滚事务。

缺点：每个服务只能操作自己对应的一个数据库。 你必须是通过调用别的服务的接口来实现，绝对不允许交叉访问别人的数据库。

TCC 方案
TCC 的全称是：Try、Confirm、Cancel。
冻结 提交 撤销



本地消息表
参考RocketMQ事务机制

可靠消息最终一致性方案
参考RocketMQ事务机制

最大努力通知方案

-----------------------------------------------------
分布式Session

tomcat + redis
Tomcat  RedisSessionManager  session维护在redis  严重依赖于web容器（如果更换jetty）

spring session + redis


-----------------------------------------------------
分布式架构
功能                Dubbo            SpringCloud  
服务注册与发现      


----------------------------------------------------------------
分布式注册中心 
zookeeper
分布式协调（考虑分布式事务）
分布式锁
元数据/配置信息管理
HA高可用性
----------------------------------------------------------
分布式通信
Netty 
